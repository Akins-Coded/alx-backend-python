pipeline {
  agent any

  options {
    // keep builds readable
    timestamps()
    ansiColor('xterm')
  }

  triggers {
    // No automatic triggers; manual only
    // (You can add "pollSCM" or "githubPush" later if desired)
  }

  environment {
    VENV = '.venv'
    // If Django needs settings overrides for CI, export them here
    // e.g., DJANGO_SETTINGS_MODULE = 'project.settings_ci'
  }

  stages {
    stage('Checkout') {
      steps {
        // If the job is created as "Pipeline script from SCM", Jenkins
        // will checkout automatically and you can replace this with: checkout scm
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            // Use ONE of these URLs and matching credentialsId:
            // HTTPS:
            // url: 'https://github.com/<user>/<repo>.git', credentialsId: 'github-https'
            // SSH:
            url: 'git@github.com:<user>/<repo>.git', credentialsId: 'github-ssh'
          ]]
        ])
      }
    }

    stage('Set up Python venv') {
      steps {
        sh """
          python3 -m venv ${VENV}
          . ${VENV}/bin/activate
          python -m pip install --upgrade pip
        """
      }
    }

    stage('Install dependencies') {
      steps {
        sh """
          . ${VENV}/bin/activate
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          # Ensure pytest is present even if not in requirements
          python -c "import pytest" 2>/dev/null || pip install pytest
          # Optional: coverage support
          python -c "import coverage" 2>/dev/null || pip install coverage pytest-cov
        """
      }
    }

    stage('Run tests (pytest)') {
      steps {
        sh """
          . ${VENV}/bin/activate
          mkdir -p reports/junit
          pytest -q --maxfail=1 --disable-warnings --junitxml=reports/junit/pytest.xml
        """
      }
    }
  }

  post {
    always {
      junit 'reports/junit/*.xml'          // publish test report
      archiveArtifacts artifacts: 'reports/**/*', fingerprint: true
      sh 'rm -rf .venv || true'
    }
  }
}
