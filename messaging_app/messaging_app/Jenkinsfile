pipeline {
    agent any

    environment {
        VENV = '.venv'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:Akins-Coded/alx-backend-python.git',
                        credentialsId: 'github-ssh'
                    ]]
                ])
            }
        }

        stage('Set up Python venv') {
            steps {
                sh '''
                    python3 -m venv $VENV
                    . $VENV/bin/activate
                    python -m pip install --upgrade pip
                '''
            }
        }

        stage('Install dependencies') {
            steps {
                sh '''
                    . $VENV/bin/activate
                    pip install --upgrade pip
                    cd messaging_app
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Run tests') {
            steps {
                sh '''
                    apt-get update
                    apt-get install -y python3-dev default-libmysqlclient-dev build-essential pkg-config
                    . $VENV/bin/activate
                    cd messaging_app
                    mkdir -p reports/junit
                    pytest -q --maxfail=1 --disable-warnings --junitxml=reports/junit/pytest.xml
                '''
            }
        }
    }

    post {
        always {
            junit 'reports/junit/*.xml'
            archiveArtifacts artifacts: 'reports/**/*', fingerprint: true
            sh 'rm -rf .venv || true'
        }
    }
}
