pipeline {
    agent any

    environment {
        VENV = '.venv'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "main",
                    url: 'git@github.com:Akins-Coded/alx-backend-python.git',
                    credentialsId: 'github-ssh'
            }
        }

        stage('Install dependencies') {
            steps {
                sh '''
                pip3 install --upgrade pip
                pip3 install -r messaging_app/requirements.txt
                '''
            }
        }

        stage('Run tests') {
            steps {
                sh '''
                    mkdir -p messaging_app/reports/junit
                    pytest messaging_app --junitxml=messaging_app/reports/junit/pytest.xml
                '''
            }
            post {
                always {
                    junit 'messaging_app/reports/junit/pytest.xml'
                }
            }
        }


      stage('Build Docker Image') {
            steps {
                sh 'docker build -t akinscoded/messaging_app:latest messaging_app'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
                    sh 'docker push akinscoded/messaging_app:latest'
                }
            }
        }
    }
}
// Coded-Somethig

        stage('Cleanup') {
            steps {
                cleanWs()  // Clears workspace after job
            }
        }
    }
}
